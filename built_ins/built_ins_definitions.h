

/* Primitives types size */

#define PRIMITIVE_TYPE_POINTER_SIZE 2
#define PRIMITIVE_TYPE_INT_SIZE 4
#define PRIMITIVE_TYPE_BYTE_SIZE 1
#define PRIMITIVE_TYPE_BOOL_SIZE 1
#define PRIMITIVE_TYPE_VOID_SIZE 0
#define PRIMITIVE_TYPE_SPYKE_SIZE 0


/* Primitive Struct Name */

#define PRIMITIVE_TYPE_POINTER_NAME "Pointer"
#define PRIMITIVE_TYPE_INT_NAME "Int"
#define PRIMITIVE_TYPE_BYTE_NAME "Byte"
#define PRIMITIVE_TYPE_BOOL_NAME "Bool"
#define PRIMITIVE_TYPE_VOID_NAME "Void"
#define PRIMITIVE_TYPE_SPYKE_NAME "Spyke"

/* Function Name for operators */

#define FUNCTION_NAME_FUNCTION_OPERATOR_PLUS "add"
#define FUNCTION_NAME_FUNCTION_OPERATOR_MULTIPLICATION "mul"

#define FUNCTION_NAME_FUNCTION_OPERATOR_EQUAL "equal"
#define FUNCTION_NAME_FUNCTION_OPERATOR_PLUS_ASSIGN "add_assign"

#define FUNCTION_NAME_FUNCTION_OPERATOR_BRACKET "bracket"

#define FUNCTION_NAME_FUNCTION_OPERATOR_EQUAL_TO "equal_to"
#define FUNCTION_NAME_FUNCTION_OPERATOR_NOT_EQUAL_TO "not_equal_to"
#define FUNCTION_NAME_FUNCTION_OPERATOR_GREATER_THAN "greater_than"
#define FUNCTION_NAME_FUNCTION_OPERATOR_LESS_THAN "less_than"
#define FUNCTION_NAME_FUNCTION_OPERATOR_GREATER_THAN_EQUAL_TO "greater_than_equal_to"
#define FUNCTION_NAME_FUNCTION_OPERATOR_LESS_THAN_EQUAL_TO "less_than_equal_to"

#define FUNCTION_NAME_FUNCTION_OPERATOR_BITWISE_AND "bitwise_and"
#define FUNCTION_NAME_FUNCTION_OPERATOR_BITWISE_OR "bitwise_or"
#define FUNCTION_NAME_FUNCTION_OPERATOR_BITWISE_XOR "bitwise_xor"
#define FUNCTION_NAME_FUNCTION_OPERATOR_BITWISE_LEFT_SHIFT "bitwise_left_shift"
#define FUNCTION_NAME_FUNCTION_OPERATOR_BITWISE_RIGHT_SHIFT "bitwise_right_shift"
